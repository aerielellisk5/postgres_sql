SELECT c1, c2 FROM table_1
- will probably try not to use the *, that queries everything in the table_1
SELECT DISTINCT - only listing the unique/DISTINCT values in the column
ex: SELECT DISTINCT (column) FROM _table_
 - Count:

Comparison operators
=   equal
>   greater than
<   less than
>=
<=
<> or != 
AND
OR 
not

single quotes '' to denote strings


ORDER_BY
SELECT column_1, column_2
FROM table
ORDER BY column ASC/DESC
- users ASC by default


WHERE first_name IN('John', 'Jake', 'Julie')
searching for anything in the paranthesis

SELECT COUNT(*) FROM film
WHERE rating ='R' 
AND replacement_cost BETWEEN 5 AND 15
_______________________

Assessment #1 

COMPLETE THE FOLLOWING TASKS!

1. Return the customer IDs of customers who have spent at least $110 with the staff member who has an ID of 2.
SELECT customer_id, SUM(amount) FROM payment
WHERE staff_id = 2
GROUP BY customer_id 
HAVING SUM(amount) > 110


The answer should be customers 187 and 148.

2. How many films begin with the letter J?

The answer should be 20.

3. What customer has the highest customer ID number whose name starts with an 'E' and has an address ID lower than 500?
SELECT * from customer
WHERE address_id < 500 AND first_name LIKE 'E%'
ORDER BY customer_id DESC
LIMIT 1

INNER JOIN EXAMPLE
SELECT payment_id,payment.customer_id,first_name
FROM payment
INNER JOIN customer 
ON payment.customer_id = customer.customer_id



INNER JOIN EXAMPLE:

SELECT district, email FROM customer
INNER JOIN address
ON address.address_id = customer.address_id
WHERE district = 'California'


- you could actually switch customer and address, and it would return the same information

SELECT DISTINCT(TO_CHAR(payment_date, 'MONTH'))
FROM payment

string functions
SELECT LOWER(LEFT(first_name,1)) || LOWER(last_name) || '@gmail.com'
AS custom_email
FROM customer

SELECT film_id, title
FROM film
WHERE film_id IN
(SELECT inventory.film_id 
FROM rental
INNER JOIN inventory ON inventory.inventory_id = rental.inventory_id
WHERE return_date BETWEEN '2005-05-29' AND '2005-05-30')
ORDER BY title

-------------------------------------------------
How can you retrieve the details of facilities with ID 1 and 5? Try to do it without using the OR operator
SELECT facid FROM cd.facilities
WHERE facid IN (0,2,5)

How can you produce a list of members who joined after the start of September 2012? Return the memid, surname, firstname, and joindate of the members in question
____________________________________________________
-- You'd like to get the signup date of your last member. How can you retrieve this information?

SELECT joindate
FROM cd.members
ORDER BY joindate DESC
LIMIT 1

_____________________________________________________

-- Produce a count of the number of facilities that have a cost to guests of 10 or more.


SELECT COUNT(*) FROM cd.facilities
WHERE guestcost > 10


_____________________________________________________


-- Produce a list of the total number of slots booked per facility in the month of September 2012. 
-- Produce an output table consisting of facility id and slots, sorted by the number of slots.


SELECT facid, COUNT(*)slots FROM cd.bookings
WHERE starttime BETWEEN '2012-09-01' AND '2012-10-01'
GROUP BY facid


____________________________________________________

-- Produce a list of the total number of slots booked per facility in the month of September 2012. 
-- Produce an output table consisting of facility id and slots, sorted by the number of slots.

 
SELECT facid, SUM(slots) FROM cd.bookings
WHERE starttime BETWEEN '2012-09-01' AND '2012-09-30'
GROUP BY facid
ORDER BY SUM(slots)

-- SELECT * FROM cd.bookings

_____________________________________________________

-- Produce a list of facilities with more than 1000 slots booked. Produce an output table consisting of 
-- facility id and total slots, sorted by facility id


SELECT facid, SUM(slots)  FROM cd.bookings
GROUP BY facid
HAVING sum(slots) > 1000

_____________________________________________________

-- How can you produce a list of the start times for bookings for tennis courts, for the date '2012-09-21'?
-- Return a list of start time and facility name pairings, ordered by the time.


SELECT starttime, name FROM cd.bookings
INNER JOIN cd.facilities
on cd.bookings.facid = cd.facilities.facid
WHERE (starttime BETWEEN '2012-09-21 00:00:00'AND'2012-09-21 23:59:59') AND name LIKE 'Tennis Court%'
ORDER BY starttime

_____________________________________________________

-- How can you produce a list of the start times for bookings by members named 'David Farrell'?

SELECT starttime FROM cd.bookings
INNER JOIN cd.members
on cd.bookings.memid = cd.members.memid
WHERE firstname = 'David' AND surname = 'Farrell'






AN EXAMPLE OF AN UPDATE JOINUPDATE account_job
SET hire_date = account.created_on
FROM account
WHERE account_job.user_id = account.user_id

Deleting an object
DELETE FROM job
WHERE job_name = 'President'
RETURNING job_id, job_name


Creating a table
CREATE TABLE information(
	info_id SERIAL PRIMARY KEY,
	title VARCHAR(500) NOT NULL,
	person VARCHAR(50) NOT NULL UNIQUE
)
RENAME A TABLE
ALTER TABLE information
RENAME TO new_info 

Update a column name
ALTER TABLE new_info
RENAME COLUMN person TO people

Editing constraints
ALTER TABLE new_info
ALTER COLUMN people DROP NOT NULL
-- would use SET to add a restraint

INSERT INTO employees(
	first_name,
	last_name,
	birthdate,
	hire_date,
	salary
)
VALUES(
	'Sammy',
	'SMith',
	'1999-11-04',
	'2010-01-01',
	50
)

Creating a table with some checks
CREATE TABLE employees(
	emp_id SERIAL PRIMARY KEY,
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,
	birthdate DATE CHECK(birthday > '1900-01-01'),
	hire_date DATE CHECK (hire_date > birthdate)
)




Case statement EXAMPLE
SELECT customer_id, 
CASE
	WHEN (customer_id <=100) THEN 'Premium'
	WHEN (customer_id BETWEEN 100 and 200) THEN 'Plus'
	ELSE 'Normal'
END AS customer_class
FROM customer

Case expression EXAMPLE

